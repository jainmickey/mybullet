# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-16 13:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid
import uuid_upload_path.storage
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FakeStory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('faked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faked_stories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LikeStory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_stories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('caption', models.CharField(db_index=True, help_text='Caption of the story.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Your story or experience related to image', null=True, verbose_name='Story/Experience')),
                ('is_deleted', models.BooleanField(default=False, help_text='Select this instead of deleting an event.', verbose_name='Deleted')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'stories',
                'verbose_name': 'story',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='StoryImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to=uuid_upload_path.storage.upload_to)),
                ('image_poi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name="Image's Point of Interest")),
                ('is_deleted', models.BooleanField(default=False, help_text='Select this instead of deleting an image.', verbose_name='Deleted')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='story',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story', to='stories.StoryImage'),
        ),
        migrations.AddField(
            model_name='likestory',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='stories.Story'),
        ),
        migrations.AddField(
            model_name='fakestory',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fakes', to='stories.Story'),
        ),
        migrations.AlterUniqueTogether(
            name='likestory',
            unique_together=set([('story', 'liked_by')]),
        ),
        migrations.AlterUniqueTogether(
            name='fakestory',
            unique_together=set([('story', 'faked_by')]),
        ),
    ]
